@page "/сontrol"
@rendermode InteractiveServer
@inject IDataService data
@attribute [Authorize]
@inject NavigationManager navigate

<PageTitle>Управление</PageTitle>

<h1>Управление сотрудниками</h1>

<div class="container">
    @if (employees == null)
    {
        <tr>
            <td colspan="5">Loading ...</td>
        </tr>
    }
    else
    {
        <div class="btn-group m-2">
            <button class="btn btn-primary" @onclick="AddEmployee">Новый сотрудник</button>
        </div>
        <div class="card-group">
            @foreach (var employee in employees)
            {
                <div class="card">
                    <div class="card-header">
                        @employee.Name
                    </div>
                    <div class="card-body">
                        <p>@employee.Position</p>
                        <p>@employee.Time</p>
                        <p>@employee.Salary</p>
                    </div>
                    <div class="card-footer">
                        <a class="btn btn-primary" href="employees/@employee.Id">Изменить</a>
                        <button class="btn btn-primary" @onclick="async() => await DeleteEmployee(employee.Id)">Удалить</button>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    IEnumerable<EmployeeItem>? employees;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        employees = await data.GetAllAsync();
    }

    void AddEmployee()
    {
        navigate.NavigateTo("employees/add");
    }

    async Task DeleteEmployee(int id)
    {
        await data.DeleteAsync(id);
        employees = await data.GetAllAsync();
    }
}